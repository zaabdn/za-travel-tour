// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String   @db.VarChar(255)
  email     String?
  password  String   @db.VarChar(255)
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model CategoryTrip {
  id        Int      @id @default(autoincrement())
  name      String
  trips     Trip[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categoryTrip")
}

model Accomodation {
  id        Int      @id @default(autoincrement())
  title     String
  trips     Trip[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("accomodation")
}

model Region {
  id        Int      @id @default(autoincrement())
  name      String
  trips     Trip[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("region")
}

model Trip {
  id             Int          @id @default(autoincrement())
  title          String
  description    String
  categoryTrip   CategoryTrip @relation(fields: [categoryTripId], references: [id])
  categoryTripId Int
  accomodation   Accomodation @relation(fields: [accomodationId], references: [id])
  accomodationId Int
  region         Region?      @relation(fields: [regionId], references: [id])
  regionId       Int?
  duration       String
  price          Int
  quota          Int
  image          String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@map("trips")
}
